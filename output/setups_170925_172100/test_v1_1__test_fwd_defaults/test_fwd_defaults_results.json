[{"Timestamp": "2025-17-09 17:21:16", "parsed_socan_response": {"channels": [{"number": 0, "frequency": 0, "enabled": true}, {"number": 1, "frequency": 2, "enabled": true}]}, "raw_socan_response": "> $3E7 $0E1 Hg $021 $220 $231 $220 $231 $003 $003 : OK\n\r>", "socan_command_method": "get_channel", "socan_command_args": "{'address': 19}", "socan_command": "sendACQ $13 $00 5", "initial_state": {"channels": [{"number": 0, "frequency": 0, "enabled": true}, {"number": 1, "frequency": 2, "enabled": true}]}}, {"Timestamp": "2025-17-09 17:21:20", "parsed_socan_response": {"channels": []}, "raw_socan_response": "> $3E7 $041 $220 $231 $220 $231 $000 $000 Hg $201 : OK\n\r>", "socan_command_method": "set_channel", "socan_command_args": "{'channels': [<tests_automation.sdk.socan_sdk.utils.commands.generic_msg.ChannelConfig object at 0x74134c68c250>, <tests_automation.sdk.socan_sdk.utils.commands.generic_msg.ChannelConfig object at 0x74134c68e8c0>, <tests_automation.sdk.socan_sdk.utils.commands.generic_msg.ChannelConfig object at 0x74134c68f280>, <tests_automation.sdk.socan_sdk.utils.commands.generic_msg.ChannelConfig object at 0x74134c68c670>, <tests_automation.sdk.socan_sdk.utils.commands.generic_msg.ChannelConfig object at 0x74134c68f220>, <tests_automation.sdk.socan_sdk.utils.commands.generic_msg.ChannelConfig object at 0x74134c68e920>, <tests_automation.sdk.socan_sdk.utils.commands.generic_msg.ChannelConfig object at 0x74134c68e470>, <tests_automation.sdk.socan_sdk.utils.commands.generic_msg.ChannelConfig object at 0x74134c68f250>], 'address': 19, 'packed_data': [32, 49, 32, 49, 0], 'data_str': '$20 $31 $20 $31 $00'}", "socan_command": "sendCMD $13 $00 $20 $31 $20 $31 $00", "parsed_rf_matrix_response": {"switch_connection_matrix": "B", "switch_connection_y": 1, "switch_connection_port": 1}, "raw_rf_matrix_response": null, "rf_matrix_command_method": "switch_connection", "rf_matrix_command_args": {"switch_connection_matrix": "B", "switch_connection_y": 1, "switch_connection_port": 1}, "rf_matrix_command": "SB:S101:1;", "keysight_xsan_command_method": "take_screenshot", "keysight_xsan_command_args": {"self": 